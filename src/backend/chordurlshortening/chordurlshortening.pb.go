// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: chordurlshortening/chordurlshortening.proto

package chordurlshortening

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// KVPair to store key-value pairs
type KVPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Val string `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *KVPair) Reset() {
	*x = KVPair{}
	mi := &file_chordurlshortening_chordurlshortening_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KVPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KVPair) ProtoMessage() {}

func (x *KVPair) ProtoReflect() protoreflect.Message {
	mi := &file_chordurlshortening_chordurlshortening_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KVPair.ProtoReflect.Descriptor instead.
func (*KVPair) Descriptor() ([]byte, []int) {
	return file_chordurlshortening_chordurlshortening_proto_rawDescGZIP(), []int{0}
}

func (x *KVPair) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KVPair) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

// Hash as a 32-byte fixed-length byte array
type Hash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *Hash) Reset() {
	*x = Hash{}
	mi := &file_chordurlshortening_chordurlshortening_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Hash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hash) ProtoMessage() {}

func (x *Hash) ProtoReflect() protoreflect.Message {
	mi := &file_chordurlshortening_chordurlshortening_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hash.ProtoReflect.Descriptor instead.
func (*Hash) Descriptor() ([]byte, []int) {
	return file_chordurlshortening_chordurlshortening_proto_rawDescGZIP(), []int{1}
}

func (x *Hash) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

// NodePointer to reference a node with an IP address and ID
type NodePointer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpAddress string `protobuf:"bytes,1,opt,name=ipAddress,proto3" json:"ipAddress,omitempty"`
	Id        *Hash  `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *NodePointer) Reset() {
	*x = NodePointer{}
	mi := &file_chordurlshortening_chordurlshortening_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodePointer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodePointer) ProtoMessage() {}

func (x *NodePointer) ProtoReflect() protoreflect.Message {
	mi := &file_chordurlshortening_chordurlshortening_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodePointer.ProtoReflect.Descriptor instead.
func (*NodePointer) Descriptor() ([]byte, []int) {
	return file_chordurlshortening_chordurlshortening_proto_rawDescGZIP(), []int{2}
}

func (x *NodePointer) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *NodePointer) GetId() *Hash {
	if x != nil {
		return x.Id
	}
	return nil
}

// Node data structure with its properties
type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data        map[string]*KVPair `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Id          *Hash              `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	IpAddress   string             `protobuf:"bytes,3,opt,name=ipAddress,proto3" json:"ipAddress,omitempty"`
	FingerTable []*NodePointer     `protobuf:"bytes,4,rep,name=fingerTable,proto3" json:"fingerTable,omitempty"`
	Pred        *NodePointer       `protobuf:"bytes,5,opt,name=pred,proto3" json:"pred,omitempty"`
	Succ        *NodePointer       `protobuf:"bytes,6,opt,name=succ,proto3" json:"succ,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_chordurlshortening_chordurlshortening_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_chordurlshortening_chordurlshortening_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_chordurlshortening_chordurlshortening_proto_rawDescGZIP(), []int{3}
}

func (x *Node) GetData() map[string]*KVPair {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Node) GetId() *Hash {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Node) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *Node) GetFingerTable() []*NodePointer {
	if x != nil {
		return x.FingerTable
	}
	return nil
}

func (x *Node) GetPred() *NodePointer {
	if x != nil {
		return x.Pred
	}
	return nil
}

func (x *Node) GetSucc() *NodePointer {
	if x != nil {
		return x.Succ
	}
	return nil
}

// Request and response messages for RPC services
type FindSuccessorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *Hash `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FindSuccessorRequest) Reset() {
	*x = FindSuccessorRequest{}
	mi := &file_chordurlshortening_chordurlshortening_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindSuccessorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindSuccessorRequest) ProtoMessage() {}

func (x *FindSuccessorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chordurlshortening_chordurlshortening_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindSuccessorRequest.ProtoReflect.Descriptor instead.
func (*FindSuccessorRequest) Descriptor() ([]byte, []int) {
	return file_chordurlshortening_chordurlshortening_proto_rawDescGZIP(), []int{4}
}

func (x *FindSuccessorRequest) GetId() *Hash {
	if x != nil {
		return x.Id
	}
	return nil
}

type FindSuccessorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Successor *NodePointer `protobuf:"bytes,1,opt,name=successor,proto3" json:"successor,omitempty"`
}

func (x *FindSuccessorResponse) Reset() {
	*x = FindSuccessorResponse{}
	mi := &file_chordurlshortening_chordurlshortening_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindSuccessorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindSuccessorResponse) ProtoMessage() {}

func (x *FindSuccessorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chordurlshortening_chordurlshortening_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindSuccessorResponse.ProtoReflect.Descriptor instead.
func (*FindSuccessorResponse) Descriptor() ([]byte, []int) {
	return file_chordurlshortening_chordurlshortening_proto_rawDescGZIP(), []int{5}
}

func (x *FindSuccessorResponse) GetSuccessor() *NodePointer {
	if x != nil {
		return x.Successor
	}
	return nil
}

type JoinRingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExistingNode *NodePointer `protobuf:"bytes,1,opt,name=existingNode,proto3" json:"existingNode,omitempty"`
}

func (x *JoinRingRequest) Reset() {
	*x = JoinRingRequest{}
	mi := &file_chordurlshortening_chordurlshortening_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinRingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRingRequest) ProtoMessage() {}

func (x *JoinRingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chordurlshortening_chordurlshortening_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRingRequest.ProtoReflect.Descriptor instead.
func (*JoinRingRequest) Descriptor() ([]byte, []int) {
	return file_chordurlshortening_chordurlshortening_proto_rawDescGZIP(), []int{6}
}

func (x *JoinRingRequest) GetExistingNode() *NodePointer {
	if x != nil {
		return x.ExistingNode
	}
	return nil
}

type JoinRingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *JoinRingResponse) Reset() {
	*x = JoinRingResponse{}
	mi := &file_chordurlshortening_chordurlshortening_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinRingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRingResponse) ProtoMessage() {}

func (x *JoinRingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chordurlshortening_chordurlshortening_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRingResponse.ProtoReflect.Descriptor instead.
func (*JoinRingResponse) Descriptor() ([]byte, []int) {
	return file_chordurlshortening_chordurlshortening_proto_rawDescGZIP(), []int{7}
}

func (x *JoinRingResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type NotifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node *NodePointer `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
}

func (x *NotifyRequest) Reset() {
	*x = NotifyRequest{}
	mi := &file_chordurlshortening_chordurlshortening_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyRequest) ProtoMessage() {}

func (x *NotifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chordurlshortening_chordurlshortening_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyRequest.ProtoReflect.Descriptor instead.
func (*NotifyRequest) Descriptor() ([]byte, []int) {
	return file_chordurlshortening_chordurlshortening_proto_rawDescGZIP(), []int{8}
}

func (x *NotifyRequest) GetNode() *NodePointer {
	if x != nil {
		return x.Node
	}
	return nil
}

type NotifyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Acknowledged bool `protobuf:"varint,1,opt,name=acknowledged,proto3" json:"acknowledged,omitempty"`
}

func (x *NotifyResponse) Reset() {
	*x = NotifyResponse{}
	mi := &file_chordurlshortening_chordurlshortening_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyResponse) ProtoMessage() {}

func (x *NotifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chordurlshortening_chordurlshortening_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyResponse.ProtoReflect.Descriptor instead.
func (*NotifyResponse) Descriptor() ([]byte, []int) {
	return file_chordurlshortening_chordurlshortening_proto_rawDescGZIP(), []int{9}
}

func (x *NotifyResponse) GetAcknowledged() bool {
	if x != nil {
		return x.Acknowledged
	}
	return false
}

type ClosestPrecedingNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *Hash `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ClosestPrecedingNodeRequest) Reset() {
	*x = ClosestPrecedingNodeRequest{}
	mi := &file_chordurlshortening_chordurlshortening_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClosestPrecedingNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClosestPrecedingNodeRequest) ProtoMessage() {}

func (x *ClosestPrecedingNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chordurlshortening_chordurlshortening_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClosestPrecedingNodeRequest.ProtoReflect.Descriptor instead.
func (*ClosestPrecedingNodeRequest) Descriptor() ([]byte, []int) {
	return file_chordurlshortening_chordurlshortening_proto_rawDescGZIP(), []int{10}
}

func (x *ClosestPrecedingNodeRequest) GetId() *Hash {
	if x != nil {
		return x.Id
	}
	return nil
}

type ClosestPrecedingNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node *NodePointer `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
}

func (x *ClosestPrecedingNodeResponse) Reset() {
	*x = ClosestPrecedingNodeResponse{}
	mi := &file_chordurlshortening_chordurlshortening_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClosestPrecedingNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClosestPrecedingNodeResponse) ProtoMessage() {}

func (x *ClosestPrecedingNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chordurlshortening_chordurlshortening_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClosestPrecedingNodeResponse.ProtoReflect.Descriptor instead.
func (*ClosestPrecedingNodeResponse) Descriptor() ([]byte, []int) {
	return file_chordurlshortening_chordurlshortening_proto_rawDescGZIP(), []int{11}
}

func (x *ClosestPrecedingNodeResponse) GetNode() *NodePointer {
	if x != nil {
		return x.Node
	}
	return nil
}

type GetIpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *GetIpRequest) Reset() {
	*x = GetIpRequest{}
	mi := &file_chordurlshortening_chordurlshortening_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIpRequest) ProtoMessage() {}

func (x *GetIpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chordurlshortening_chordurlshortening_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIpRequest.ProtoReflect.Descriptor instead.
func (*GetIpRequest) Descriptor() ([]byte, []int) {
	return file_chordurlshortening_chordurlshortening_proto_rawDescGZIP(), []int{12}
}

func (x *GetIpRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type GetIpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpAddress string `protobuf:"bytes,1,opt,name=ipAddress,proto3" json:"ipAddress,omitempty"`
}

func (x *GetIpResponse) Reset() {
	*x = GetIpResponse{}
	mi := &file_chordurlshortening_chordurlshortening_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIpResponse) ProtoMessage() {}

func (x *GetIpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chordurlshortening_chordurlshortening_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIpResponse.ProtoReflect.Descriptor instead.
func (*GetIpResponse) Descriptor() ([]byte, []int) {
	return file_chordurlshortening_chordurlshortening_proto_rawDescGZIP(), []int{13}
}

func (x *GetIpResponse) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

var File_chordurlshortening_chordurlshortening_proto protoreflect.FileDescriptor

var file_chordurlshortening_chordurlshortening_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x63, 0x68, 0x6f, 0x72, 0x64, 0x75, 0x72, 0x6c, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x65,
	0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x63, 0x68, 0x6f, 0x72, 0x64, 0x75, 0x72, 0x6c, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x63,
	0x68, 0x6f, 0x72, 0x64, 0x75, 0x72, 0x6c, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x6e, 0x69, 0x6e,
	0x67, 0x22, 0x2c, 0x0a, 0x06, 0x4b, 0x56, 0x50, 0x61, 0x69, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22,
	0x1a, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x55, 0x0a, 0x0b, 0x4e,
	0x6f, 0x64, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x70,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69,
	0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x64, 0x75, 0x72, 0x6c, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x88, 0x03, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x68, 0x6f, 0x72,
	0x64, 0x75, 0x72, 0x6c, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x64, 0x75, 0x72, 0x6c, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x65,
	0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x41, 0x0a, 0x0b, 0x66,
	0x69, 0x6e, 0x67, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x64, 0x75, 0x72, 0x6c, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x33,
	0x0a, 0x04, 0x70, 0x72, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63,
	0x68, 0x6f, 0x72, 0x64, 0x75, 0x72, 0x6c, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x04, 0x70,
	0x72, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x04, 0x73, 0x75, 0x63, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x64, 0x75, 0x72, 0x6c, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x52, 0x04, 0x73, 0x75, 0x63, 0x63, 0x1a, 0x53, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x64, 0x75, 0x72,
	0x6c, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4b, 0x56, 0x50, 0x61,
	0x69, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x40, 0x0a,
	0x14, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x64, 0x75, 0x72, 0x6c, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x56, 0x0a, 0x15, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x09, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x68,
	0x6f, 0x72, 0x64, 0x75, 0x72, 0x6c, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x09, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x22, 0x56, 0x0a, 0x0f, 0x4a, 0x6f, 0x69, 0x6e, 0x52,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x0c, 0x65, 0x78,
	0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x64, 0x75, 0x72, 0x6c, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x52, 0x0c, 0x65, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x22,
	0x2c, 0x0a, 0x10, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x44, 0x0a,
	0x0d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33,
	0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63,
	0x68, 0x6f, 0x72, 0x64, 0x75, 0x72, 0x6c, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x04, 0x6e,
	0x6f, 0x64, 0x65, 0x22, 0x34, 0x0a, 0x0e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x63, 0x6b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x64, 0x22, 0x47, 0x0a, 0x1b, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x73, 0x74, 0x50, 0x72, 0x65, 0x63, 0x65, 0x64, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x64, 0x75, 0x72, 0x6c, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x53, 0x0a, 0x1c, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x73, 0x74, 0x50, 0x72, 0x65,
	0x63, 0x65, 0x64, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x64, 0x75, 0x72, 0x6c, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x22, 0x27, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x49, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x22, 0x2d, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x49, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32,
	0xe8, 0x03, 0x0a, 0x0b, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x64, 0x0a, 0x0d, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72,
	0x12, 0x28, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x64, 0x75, 0x72, 0x6c, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x68, 0x6f,
	0x72, 0x64, 0x75, 0x72, 0x6c, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x08, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x69, 0x6e,
	0x67, 0x12, 0x23, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x64, 0x75, 0x72, 0x6c, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x64, 0x75, 0x72,
	0x6c, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4a, 0x6f, 0x69, 0x6e,
	0x52, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x06,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x21, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x64, 0x75, 0x72,
	0x6c, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x68, 0x6f, 0x72,
	0x64, 0x75, 0x72, 0x6c, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x79, 0x0a,
	0x14, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x73, 0x74, 0x50, 0x72, 0x65, 0x63, 0x65, 0x64, 0x69, 0x6e,
	0x67, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x2f, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x64, 0x75, 0x72, 0x6c,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x73, 0x74, 0x50, 0x72, 0x65, 0x63, 0x65, 0x64, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x64, 0x75, 0x72,
	0x6c, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x73, 0x74, 0x50, 0x72, 0x65, 0x63, 0x65, 0x64, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4e,
	0x6f, 0x64, 0x65, 0x49, 0x70, 0x12, 0x20, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x64, 0x75, 0x72, 0x6c,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x68, 0x6f, 0x72, 0x64, 0x75,
	0x72, 0x6c, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74,
	0x49, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x29, 0x5a, 0x27, 0x63, 0x68,
	0x6f, 0x72, 0x64, 0x2d, 0x75, 0x72, 0x6c, 0x2d, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x6e, 0x69,
	0x6e, 0x67, 0x2f, 0x63, 0x68, 0x6f, 0x72, 0x64, 0x75, 0x72, 0x6c, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x65, 0x6e, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chordurlshortening_chordurlshortening_proto_rawDescOnce sync.Once
	file_chordurlshortening_chordurlshortening_proto_rawDescData = file_chordurlshortening_chordurlshortening_proto_rawDesc
)

func file_chordurlshortening_chordurlshortening_proto_rawDescGZIP() []byte {
	file_chordurlshortening_chordurlshortening_proto_rawDescOnce.Do(func() {
		file_chordurlshortening_chordurlshortening_proto_rawDescData = protoimpl.X.CompressGZIP(file_chordurlshortening_chordurlshortening_proto_rawDescData)
	})
	return file_chordurlshortening_chordurlshortening_proto_rawDescData
}

var file_chordurlshortening_chordurlshortening_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_chordurlshortening_chordurlshortening_proto_goTypes = []any{
	(*KVPair)(nil),                       // 0: chordurlshortening.KVPair
	(*Hash)(nil),                         // 1: chordurlshortening.Hash
	(*NodePointer)(nil),                  // 2: chordurlshortening.NodePointer
	(*Node)(nil),                         // 3: chordurlshortening.Node
	(*FindSuccessorRequest)(nil),         // 4: chordurlshortening.FindSuccessorRequest
	(*FindSuccessorResponse)(nil),        // 5: chordurlshortening.FindSuccessorResponse
	(*JoinRingRequest)(nil),              // 6: chordurlshortening.JoinRingRequest
	(*JoinRingResponse)(nil),             // 7: chordurlshortening.JoinRingResponse
	(*NotifyRequest)(nil),                // 8: chordurlshortening.NotifyRequest
	(*NotifyResponse)(nil),               // 9: chordurlshortening.NotifyResponse
	(*ClosestPrecedingNodeRequest)(nil),  // 10: chordurlshortening.ClosestPrecedingNodeRequest
	(*ClosestPrecedingNodeResponse)(nil), // 11: chordurlshortening.ClosestPrecedingNodeResponse
	(*GetIpRequest)(nil),                 // 12: chordurlshortening.GetIpRequest
	(*GetIpResponse)(nil),                // 13: chordurlshortening.GetIpResponse
	nil,                                  // 14: chordurlshortening.Node.DataEntry
}
var file_chordurlshortening_chordurlshortening_proto_depIdxs = []int32{
	1,  // 0: chordurlshortening.NodePointer.id:type_name -> chordurlshortening.Hash
	14, // 1: chordurlshortening.Node.data:type_name -> chordurlshortening.Node.DataEntry
	1,  // 2: chordurlshortening.Node.id:type_name -> chordurlshortening.Hash
	2,  // 3: chordurlshortening.Node.fingerTable:type_name -> chordurlshortening.NodePointer
	2,  // 4: chordurlshortening.Node.pred:type_name -> chordurlshortening.NodePointer
	2,  // 5: chordurlshortening.Node.succ:type_name -> chordurlshortening.NodePointer
	1,  // 6: chordurlshortening.FindSuccessorRequest.id:type_name -> chordurlshortening.Hash
	2,  // 7: chordurlshortening.FindSuccessorResponse.successor:type_name -> chordurlshortening.NodePointer
	2,  // 8: chordurlshortening.JoinRingRequest.existingNode:type_name -> chordurlshortening.NodePointer
	2,  // 9: chordurlshortening.NotifyRequest.node:type_name -> chordurlshortening.NodePointer
	1,  // 10: chordurlshortening.ClosestPrecedingNodeRequest.id:type_name -> chordurlshortening.Hash
	2,  // 11: chordurlshortening.ClosestPrecedingNodeResponse.node:type_name -> chordurlshortening.NodePointer
	0,  // 12: chordurlshortening.Node.DataEntry.value:type_name -> chordurlshortening.KVPair
	4,  // 13: chordurlshortening.NodeService.FindSuccessor:input_type -> chordurlshortening.FindSuccessorRequest
	6,  // 14: chordurlshortening.NodeService.JoinRing:input_type -> chordurlshortening.JoinRingRequest
	8,  // 15: chordurlshortening.NodeService.Notify:input_type -> chordurlshortening.NotifyRequest
	10, // 16: chordurlshortening.NodeService.ClosestPrecedingNode:input_type -> chordurlshortening.ClosestPrecedingNodeRequest
	12, // 17: chordurlshortening.NodeService.GetNodeIp:input_type -> chordurlshortening.GetIpRequest
	5,  // 18: chordurlshortening.NodeService.FindSuccessor:output_type -> chordurlshortening.FindSuccessorResponse
	7,  // 19: chordurlshortening.NodeService.JoinRing:output_type -> chordurlshortening.JoinRingResponse
	9,  // 20: chordurlshortening.NodeService.Notify:output_type -> chordurlshortening.NotifyResponse
	11, // 21: chordurlshortening.NodeService.ClosestPrecedingNode:output_type -> chordurlshortening.ClosestPrecedingNodeResponse
	13, // 22: chordurlshortening.NodeService.GetNodeIp:output_type -> chordurlshortening.GetIpResponse
	18, // [18:23] is the sub-list for method output_type
	13, // [13:18] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_chordurlshortening_chordurlshortening_proto_init() }
func file_chordurlshortening_chordurlshortening_proto_init() {
	if File_chordurlshortening_chordurlshortening_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chordurlshortening_chordurlshortening_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chordurlshortening_chordurlshortening_proto_goTypes,
		DependencyIndexes: file_chordurlshortening_chordurlshortening_proto_depIdxs,
		MessageInfos:      file_chordurlshortening_chordurlshortening_proto_msgTypes,
	}.Build()
	File_chordurlshortening_chordurlshortening_proto = out.File
	file_chordurlshortening_chordurlshortening_proto_rawDesc = nil
	file_chordurlshortening_chordurlshortening_proto_goTypes = nil
	file_chordurlshortening_chordurlshortening_proto_depIdxs = nil
}
